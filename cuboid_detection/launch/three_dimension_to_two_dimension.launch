<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <!-- Launch Ground Plane Segmentation file -->
    <include file="$(find cuboid_detection)/launch/ground_plane_segmentation.launch"/>
    
    <!-- Lau -->
    <node
        pkg="cuboid_detection"
        type="three_dimension_to_two_dimension"
        name="three_dimension_to_two_dimension"
        output="screen">

        <!-- Set topics and params -->
        <!-- <rosparam> -->
            <!-- invert (default: true): True > Box; False > Ground Plane -->
            <!-- invert: true -->
            <!-- voxel_size (default: 0.01): Lower the value, denser the point cloud, more CPU -->
            <!-- voxel_size: 0.005 -->
            <!-- distance_threshold (default: 0.01): Lower the value, more of box + table noise -->
            <!-- distance_threshold: 0.015 -->
            <!-- Topics -->
            <!-- input: "/camera/depth/color/points"
            output: "/ground_plane_segmentation/points"
            plane_coefficients: "/ground_plane_segmentation/coefficients"
        </rosparam> -->
    </node>

     <node
        pkg="color_object_detection"
        type="object_detection.py"
        name="object_detection"
        output="screen">
    </node>

</launch>
